# goer-apiserver 全配置

# RESTful Server
server:
  mode: debug # server mode: release, debug, test，默认 release
  healthz: true # 是否开启健康检查，如果开启会安装 /healthz 路由，默认 true
  middlewares: recovery,logger,secure,nocache,cors,dump # 加载的 gin 中间件列表，多个中间件，逗号(,)隔开
  max-ping-count: 3 # http 服务启动后，自检尝试次数，默认 3
  addr: :8080

# HTTPS 配置
tls:
  addr: :8443 # HTTPS 服务器监听地址
  cert: ./_output/cert/server.crt # 证书
  key: ./_output/cert/server.key # 证书 Key 文件

# GRPC Serve
grpc:
  addr: :8090 # GRPC 服务器监听地址

# MySQL
mysql:
  host: 127.0.0.1 # MySQL 机器 ip 和端口，默认 127.0.0.1:3306
  username: root # MySQL 用户名(建议授权最小权限集)
  password: root # MySQL 用户密码
  database: goer # 系统所用的数据库名
  max-idle-connections: 100 # MySQL 最大空闲连接数，默认 100
  max-open-connections: 100 # MySQL 最大打开的连接数，默认 100
  max-connection-life-time: 10s # 空闲连接最大存活时间，默认 10s
  log-level: 4 # GORM log level, 1: silent, 2:error, 3:warn, 4:info

# Redis
redis:
  host: 127.0.0.1 # redis 地址，默认 127.0.0.1:6379
  port: 6379 # redis 端口，默认 6379
  password:  # redis 密码
  #addrs:
  #master-name: # redis 集群 master 名称
  #username: # redis 登录用户名
  #database: # redis 数据库
  #optimisation-max-idle:  # redis 连接池中的最大空闲连接数
  #optimisation-max-active: # 最大活跃连接数
  #timeout: # 连接 redis 时的超时时间
  #enable-cluster: # 是否开启集群模式
  #use-ssl: # 是否启用 TLS
  #ssl-insecure-skip-verify: # 当连接 redis 时允许使用自签名证书

# JWT 配置
jwt:
  realm: JWT # jwt 标识
  key: dfVpOK8LZeJLZHYmHdb1VdyRrACKpqoo # 服务端密钥
  timeout: 24h # token 过期时间(小时)
  max-refresh: 24h # token 更新时间(小时)

log:
  name: apiserver # Logger的名字
  development: true # 是否是开发模式。如果是开发模式，会对DPanicLevel进行堆栈跟踪。
  level: debug # 日志级别，优先级从低到高依次为：debug, info, warn, error, dpanic, panic, fatal。
  format: console # 支持的日志输出格式，目前支持console和json两种。console其实就是text格式。
  enable-color: true # 是否开启颜色输出，true:是，false:否
  disable-caller: false # 是否开启 caller，如果开启会在日志中显示调用日志所在的文件、函数和行号
  disable-stacktrace: false # 是否再panic及以上级别禁止打印堆栈信息
  output-paths: ./_output/log/goer-apiserver.log,stdout # 支持输出到多个输出，逗号分开。支持输出到标准输出（stdout）和文件。
  error-output-paths: ./_output/log/goer-apiserver.error.log # zap内部(非业务)错误日志输出路径，多个输出，逗号分开

feature:
  enable-metrics: true # 开启 metrics, router:  /metrics
  profiling: true # 开启性能分析, 可以通过 <host>:<port>/debug/pprof/地址查看程序栈、线程等系统信息，默认值为 true
